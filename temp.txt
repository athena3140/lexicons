// components/sidebar.vue
	<!-- :style="{ height: sidebarHeight + 'px' }"
		:class="{
			'translate-x-0': isOpen,
			'md:translate-x-0': loaded,
		}" -->


// components/card.vue

<!-- 
		<ol>
			<li v-for="(item, index) in data" :key="index" :class="{ 'bg-gray-800': showItem(item) }">{{ item }}</li>
		</ol>
<tr v-for="(item, index) in data" :key="index" :class="{ 'bg-gray-800': showItem(item) }">
			<td>{{ item.split("=")[0].trim() }}</td>
			<td class="px-3">=</td>
			<td class="tracking-wider">{{ item.split("=")[1].trim() }}</td>
		</tr> 
 const showItem = (item) => {
 	let found = false;
 	for (const key in item) {
 		if (item[key].includes(props.searchQuery)) {
 			found = true;
 			break;
 		}
 	}
 	return found;
 }; -->






<template>
	<div v-if="!loaded">
		<NuxtLink :to="logoData.url">
			<img src="http://localhost:3000/api/logo" />
		</NuxtLink>
	</div>
	<div class="skeleton h-9 w-30"></div>
</template>

<script setup>
import { onMounted, ref } from "vue";

const logoData = useState("logoData");
const loaded = ref(false);
const logoUrl = ref("");

onMounted(() => {
	logoData ? (loaded.value = true) : false;
	logoUrl.value = logoData.value.text ? `/api/logo/${logoData.value.text}` : "/api/logo";
});
</script>